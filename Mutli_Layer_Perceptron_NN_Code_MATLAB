%% Importing Data
% In this data, we have imported over 400 different measurements of the height,
% depth and weight of four different fruit 

data = readmatrix('Fruit_Weight_Length_Width.xlsx');
x = data(:,1:3);
y = data(:,4);


%% Diagrams for Data visualisation
% figure;
% histogram(x(:,1),20)
% figure;
% histogram(x(:,2),20)
% figure;
% plot(x(:,1),y,'o');

%% Normalise data

sz = size(x);
x_2 = zeros(sz);

for i = 1:3
    x_2(:,i) = (x(:,i)-min(x(:,i)))/(max(x(:,i))-min(x(:,i)));
end

% figure;
% histogram(x2(:,2),10)
% 
% figure;
% plot(x2(:,2),y,'o');

%% Train MLPNN 
% % 
xt = x_2';
yt = y';
hiddenLayerSize = 10;
net = fitnet(hiddenLayerSize);
net.divideParam.trainRatio = 80/100;
net.divideParam.valRatio = 20/100;
net.divideParam.testRatio = 0/100;
% 
% 
% % options = trainingOptions('InitialLearnRate',0.005, ...
% %      'MaxEpochs',3,...
% %      'Shuffle','every-epoch',...
% %      'Verbose',false,...
% %      'Plots','training-progress'...
% %      );
% %      %'Export','loss'...
% 

net.trainFcn = 'traingd';
net.trainParam.lr = 0.1;
net.trainParam.epochs = 100;
net.trainParam.max_fail = 100;

[net,tr] = train(net,xt,yt);

%% Preformance

% % 
% training_data = tr.trainInd;
% val_data = tr.valInd;
% 
% yTrain = net(xt(1:3,training_data));
% size(yTrain);
% ytrue = yt(training_data);
% rmse = sqrt(mean((yTrain-ytrue).^2))
% 
% yval = net(xt(1:3,val_data));
% size(yval);
% y_val_true = yt(val_data);
% rmse1 = sqrt(mean((yval-y_val_true).^2))

%% Optimisation for the number of neurons in hidden layer
% 
% for i = 1:100
% hiddenLayerSize = i;
% net = fitnet(hiddenLayerSize);
% net.trainFcn = 'traingd';
% net.divideParam.trainRatio = 80/100;
% net.divideParam.valRatio = 20/100;
% net.divideParam.testRatio = 0/100;
% net.trainParam.lr = 0.01;
% net.trainParam.epochs = 7;
% net.trainParam.max_fail = 7;
% 
% [net,tr] = train(net,xt,yt);
% 
% training_data = tr.trainInd;
% val_data = tr.valInd;
% 
% yTrain = net(xt(1:3,training_data));
% ytrue = yt(training_data);
% rmse_train(i) = sqrt(mean((yTrain-ytrue).^2)); %RMSE of Training data set
% 
% yval = net(xt(1:3,val_data));
% y_val_true = yt(val_data);
% rmse1_train(i) = sqrt(mean((yval-y_val_true).^2)); %RMSE of Validation data set
% 
% end
% 
% figure;
% 
% x_1_100 = 1:100;
% % 
% 
% plot(1:100,rmse_train,'k--','LineWidth',2); hold on;
% plot(1:100,rmse1_train,'LineWidth',2,'color','black'); hold on;
% % plot(rmse_1_fitted); hold on;
% 
% xlabel('Number of Neurons in the Hidden Layer','FontSize',25);
% ylabel('Root Mean Squared Error (RMSE)','FontSize',25);
% title('RMSE vs Number of Neurons in Hidden Layer','FontSize',25);
% 
% set(gca,'fontname','Times New Roman')  % Set it to Times New Roman
% % % 
% weights = net.LW;
% bias = net.b

%% PLOTTING 3D curves


% % For Learning rate = 0.1
% x1 = [0,12,24,36,48,60,72,84];
% z1 = [5.691,405.5,129800000,5.632*10^18,2.93*10^31,1.527*10^44,7.952*10^56,4.142*10^69];
% y1 = [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1];
% 
% % For Learning rate = 0.01
% x2 = [0,12,24,36,48,60,72,84];
% z2 = [5.783,1.341,1.322,1.311,1.302,1.293,1.283,1.273];
% y2 = [0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01];
% 
% % For Learning rate = 0.001
% x3 = x2;
% z3 = [1.93,1.554,1.378,1.292,1.249,1.225,1.212,1.203,1.2];
% y3 = [0.001,0.001,0.001,0.001,0.001,0.001,0.001,0.001];
% 
% % For Learning rate = 0.0001
% x4 = x2;
% z4 = [4.513,4.364,4.223,4.09,3.964,3.846,3.733,3.627];
% y4 = [0.0001,0.0001,0.0001,0.0001,0.0001,0.0001,0.0001,0.0001];
% 
% % For Learning rate = 0.00001
% 
% x5 = x2;
% z5 = [5.943,5.919,5.895,5.871,5.847,5.824,5.8,5.777];
% y5 = [0.00001,0.00001,0.00001,0.00001,0.00001,0.00001,0.00001,0.00001];
% 
% % For Learning rate = 0.000001
% 
% x6 = x2;
% z6 = [6.032,6.028,6.025,6.021,6.018,6.014,6.011,6.007];
% y6 = [0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001,0.000001];
% 
% % For Learning rate = 0.0000001
% 
% x7 = x2;
% z7 = [5.822,5.822,5.821,5.821,5.821,5.821,5.82,5.82];
% y7 = [0.0000001,0.0000001,0.0000001,0.0000001,0.0000001,0.0000001,0.0000001,0.0000001];
% 
% % For Learning rate = 0.00000001
% 
% x8 = x2;
% z8 = [6.49,6.49,6.489,6.489,6.489,6.489,6.489,6.489];
% y8 = y7*(1/10);
% 
% 
% y_1_1 = fittedmodel_1(x1);
% y_2_1 = fittedmodel_2(x2);
% y_3_1 = fittedmodel_3(x3);
% y_4_1 = fittedmodel_4(x4);
% y_5_1 = fittedmodel_5(x5);
% y_6_1 = fittedmodel_6(x6);
% y_7_1 = fittedmodel_7(x7);
% y_8_1 = fittedmodel_8(x8);
% 
% lr = [0.1, 0.01, 0.001, 0.0001, 0.00001, 0.000001, 0.0000001,0.00000001];
% 
% a1 = [y_1_1(1),y_2_1(1),y_3_1(1),y_4_1(1),y_5_1(1),y_6_1(1),y_7_1(1),y_8_1(1)];
% a2 = [y_1_1(2),y_2_1(2),y_3_1(2),y_4_1(2),y_5_1(2),y_6_1(2),y_7_1(2),y_8_1(2)];
% a3 = [y_1_1(3),y_2_1(3),y_3_1(3),y_4_1(3),y_5_1(3),y_6_1(3),y_7_1(3),y_8_1(3)];
% a4 = [y_1_1(4),y_2_1(4),y_3_1(4),y_4_1(4),y_5_1(4),y_6_1(4),y_7_1(4),y_8_1(4)];
% a5 = [y_1_1(5),y_2_1(5),y_3_1(5),y_4_1(5),y_5_1(5),y_6_1(5),y_7_1(5),y_8_1(5)];
% a6 = [y_1_1(6),y_2_1(6),y_3_1(6),y_4_1(6),y_5_1(6),y_6_1(6),y_7_1(6),y_8_1(6)];
% a7 = [y_1_1(7),y_2_1(8),y_3_1(7),y_4_1(7),y_5_1(7),y_6_1(7),y_7_1(7),y_8_1(7)];
% a8 = [y_1_1(8),y_2_1(8),y_3_1(8),y_4_1(8),y_5_1(8),y_6_1(8),y_7_1(8),y_8_1(8)];
% 
% var = linspace(1,1,8);
% 
% x_1 = [var*0;var*12;var*24;var*36;var*48;var*60;var*72;var*84];
% 
% a = [a1;a2;a3;a4;a5;a6;a7;a8];
% 
% figure
% hold on % Use this to plot multiple series on a single figure
% plot3(x1,y1,y_1_1,'Color','black','LineWidth',2)
% plot3(x1,y2,y_2_1,'Color','black','LineWidth',2)
% plot3(x1,y3,y_3_1,'Color','black','LineWidth',2)
% plot3(x1,y4,y_4_1,'Color','black','LineWidth',2)
% plot3(x1,y5,y_5_1,'Color','black','LineWidth',2)
% plot3(x1,y6,y_6_1,'Color','black','LineWidth',2)
% plot3(x1,y7,y_7_1,'Color','black','LineWidth',2)
% plot3(x1,y8,y_8_1,'Color','black','LineWidth',2)
% hold on;
% 
% for i= 1:8
%     plot3(x_1(i,:),lr,a(i,:),'Color','black','LineWidth',2);
%     hold on;
% end
% 
% a_a = [y_1_1.'; y_2_1.'; y_3_1.'; y_4_1.'; y_5_1.'; y_6_1.';y_7_1.'; y_8_1.'];
% 
% hold on;
% surf(x1,lr,a_a)
% alpha(.2)
% zlim([0 20])
%     
% xlabel('Iterations')
% zlabel('Loss function')
% ylabel('Learning Rate')
% 
% set(gca, 'yscale', 'log')
% grid on;
% 
% % for k = 1:8
% % plot3(i,z,'o','MarkerFaceColor','black')
% % end
% 
% figure;
% for i = 1:8
%     for k = 1:8
%             plot3(x_1(i,k),lr(k),a(i,k),'o','MarkerFaceColor','black','MarkerEdgeColor','k');
%             hold on;
%     end
% end
% % 
% xlabel('Iterations')
% zlabel('Loss Function')
% ylabel('Learning Rate')
% 
% set(gca, 'yscale', 'log')
% view(3)
% grid on;
% zlim([0 10])
% 
% 
% % figure;
% % for i = 1:8
% %     plot3(x_1(i,:),lr,a(i,:),'Color','black','LineWidth',2);
% %     hold on;
% % end

% %%
% 
% figure;
% plot(x2,y_2_1)
% xlabel('Number of Epochs','FontSize',25);
% ylabel(' Loss (Mean Squared Error)','FontSize',25);
% title('Loss function when LR = 0.01','FontSize',25);
% 
% set(gca,'fontname','Times New Roman')  % Set it to Times New Roman

